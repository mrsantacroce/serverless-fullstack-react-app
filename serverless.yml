service: serverless-fullstack-react-app

frameworkVersion: ">=4.0.0"

provider:
  name: aws
  region: us-east-1
  runtime: nodejs20.x
  stage: dev
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

  functions:
    create:
      handler: todos/create.create
      events:
        - http:
            path: todos
            method: post
            cors: true

    list:
      handler: todos/list.list
      events:
        - http:
            path: todos
            method: get
            cors: true

    get:
      handler: todos/get.get
      events:
        - http:
            path: todos/{id}
            method: get
            cors: true

    update:
      handler: todos/update.update
      events:
        - http:
            path: todos/{id}
            method: put
            cors: true

    delete:
      handler: todos/delete.delete
      events:
        - http:
            path: todos/{id}
            method: delete
            cors: true

resources:
  Resources:
    DynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
